<div xmlns:h="http://java.sun.com/jsf/html"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:o="http://openfaces.org/"
     class="Col4_234 darkgray">

  <div id="component" align="center">

    <o:clientValidationSupport clientValidation="onDemand"/>
    <h:inputHidden id="firstLoadHelper" value="#{ValidationBean.firstLoad2}"/>

    <table class="demo_table" cellpadding="0" cellspacing="0" border="0" width="90%" style="text-align:left;">
      <tr>
        <td style="width: 40%;">
          <span class="field_title">Custom validator. Enter "TeamDev":</span>
        </td>
        <td style="width: 130px;">
          <h:inputText id="customValidatorField" style="width: 120px;">
            <o:validateCustom clientFunction="return value == 'TeamDev';" summary="Wrong word"
                              detail="'TeamDev' word is expected"/>
          </h:inputText>
          <o:floatingIconMessage for="customValidatorField"/>
        </td>
        <td>
          &#160;
          <h:message for="customValidatorField" style="color: #ff7f7f;"/>
        </td>
      </tr>
      <tr>
        <td>
          <span class="field_title" style="white-space: nowrap;">RegExp validator. Enter a phone number in
            <i>+xx (xxx) xxx xx xx</i> format:</span>
        </td>
        <td>
          <h:inputText id="regExpValidatorField" style="width: 120px;">
            <o:validateRegex
                    pattern="\+\d\d [(]\d\d\d[)] \d\d\d \d\d \d\d"
                    summary="Wrong number"
                    detail="Please provide a phone number in the following format: +xx (xxx) xxx xx xx"/>
          </h:inputText>
          <o:floatingIconMessage for="regExpValidatorField"/>
        </td>
        <td>
          &#160;
          <h:message for="regExpValidatorField" style="color: #ff7f7f;"/>
        </td>
      </tr>
      <tr>
        <td>
          <span class="field_title">E-mail validator:</span>
        </td>
        <td>
          <h:inputText id="emailValidatorField" style="width: 120px;">
            <o:validateEmail summary="Incorrect e-mail" detail="Please provide a correct e-mail address"/>
          </h:inputText>
          <o:floatingIconMessage for="emailValidatorField"/>
        </td>
        <td>
          &#160;
          <h:message for="emailValidatorField" style="color: #ff7f7f;"/>
        </td>
      </tr>
      <tr>
        <td>
          <span class="field_title">URL validator:</span>
        </td>
        <td>
          <h:inputText id="urlValidatorField" style="width: 120px;">
            <o:validateUrl summary="Incorrect URL" detail="Please provide a valid URL address"/>
          </h:inputText>
          <o:floatingIconMessage for="urlValidatorField"/>
        </td>
        <td>
          &#160;
          <h:message for="urlValidatorField" style="color: #ff7f7f;"/>
        </td>
      </tr>
      <tr>
        <td rowspan="2" style="border-bottom: 1px solid #e0e0e0;">
          <span class="field_title">Equal validator:</span>
        </td>
        <td style="border-bottom: 0 solid white;">
          <h:inputText id="equalValidatorField1" style="width: 120px;">
            <o:validateCustom clientFunction="return value.length > 0" detail="The value should not be empty"/>
          </h:inputText>
          <o:floatingIconMessage for="equalValidatorField1"/>
        </td>
        <td style="border-bottom: 0 solid white;">
          &#160;
          <h:message for="equalValidatorField1" style="color: #ff7f7f;"/>
        </td>
      </tr>
      <tr>
        <td style="border-bottom: 1px solid #e0e0e0;">
          <h:inputText id="equalValidatorField2" style="width: 120px;">
            <o:validateEqual for="equalValidatorField1"/>
          </h:inputText>
          <o:floatingIconMessage for="equalValidatorField2"/>
        </td>
        <td style="border-bottom: 1px solid #e0e0e0;">
          &#160;
          <h:message for="equalValidatorField2" style="color: #ff7f7f;"/>
        </td>
      </tr>
    </table>

  </div>

  <br/>

  <table>
    <tr>
      <td style="padding-right: 20px;">
        <h:commandButton style="font-weight: bold;" value="Submit"
                         onclick="return O$.validateFormById('validationForm');"/>
      </td>
      <td>
        <input type="button" value="Enter Invalid Data" onclick="fillInvalidData();"/>
      </td>
      <td>
        <input type="button" value="Enter Valid Data" onclick="fillValidData();"/>
      </td>
    </tr>
  </table>

  <div class="Col1_1 serif">
    The OpenFaces validation framework provides additional set of validators supported both on the client and server side:
    <ul class="hang">
      <li><strong>CustomValidator</strong> - Allows writing custom JavaScript code to validate the value on
        the client and/or assign a method to validate it on the server.
      </li>
      <li><strong>RegexValidator</strong> - Checks for compliance with a regular expression provided with
        the <i>pattern</i> attribute. An empty value is valid.
      </li>
      <li><strong>EmailValidator</strong> - Checks that an entered string is an email address. An empty value
        is valid.
      </li>
      <li><strong>URLValidator</strong> - Checks that an entered string is a valid URL. An empty value is
        valid.
      </li>
      <li><strong>EqualValidator</strong> - Checks that values of two inputs are the same.</li>
    </ul>
    The validators on this page are executed on the client side.
  </div>

</div>
