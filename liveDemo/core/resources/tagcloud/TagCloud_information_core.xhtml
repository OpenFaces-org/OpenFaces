<div xmlns:h="http://java.sun.com/jsf/html"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:o="http://openfaces.org/">

  <div id="Demo">
    Tagging is the process of labeling data with related keywords. The basic idea of tag clouds is to represent
    tags according to their meaning, their weight and their frequency relatively to other tags. This
    is done with appropriate font sizes and colors.
    The more important a tag is, the bigger and louder it appears (or at least should appear).
     <br/>
     <br/>
    Imagine that you have the site where users can publish their resources and mark them with some tags.
    Resources have some categories. This example show how tag cloud helps to navigate thought the resources and
    how you can customize the appearance of the Tag Cloud component.
      <br/>
    
    <h:outputLabel id="skinSelection"
                    value="Select skin: "
            styleClass="headerResult"/>
      <h:selectOneMenu value="#{TagCloudBean.skin}">
        <f:selectItem itemValue="default" itemLabel="Default"/>
        <f:selectItem itemValue="theme1" itemLabel="theme1"/>
        <f:selectItem itemValue="theme2" itemLabel="theme2"/>
        <o:ajax event="change"
                render="contentGrid"/>
      </h:selectOneMenu>
    <br/>
     <br/>
    <h:panelGrid id="contentGrid"
                 columns="2"
                 columnClasses="tagCloud_container, content "
                 styleClass="#{TagCloudBean.skin}">
      <h:panelGrid>
        <h:panelGrid id="categoryGrid" columns="2">
          <h:outputText id="textCategory" value="Select category:"/>
          <h:selectOneMenu value="#{TagCloudBean.currentCategory}">
            <f:selectItem itemValue="All" itemLabel="All"/>
            <f:selectItem itemValue="Articles" itemLabel="Articles"/>
            <f:selectItem itemValue="Photos" itemLabel="Photos"/>
            <f:selectItem itemValue="Books" itemLabel="Books"/>
            <o:ajax event="change"
                    render="contentGrid"/>
          </h:selectOneMenu>
        </h:panelGrid>


        <h:outputText id="tagLabel"
                      value="<b><i>Tags:</b></i>"
                      escape="false"/>
        <o:tagCloud id="listTagCloud"
                    items="#{TagCloudBean.entitiesItemsList}"
                    itemKey="#{item.text}"
                    itemText="#{item.text}"
                    itemTitle="#{item.title}"
                    itemUrl="#{item.url}"
                    itemWeight="#{item.weight}"
                    itemWeightVisible="#{TagCloudBean.itemWeightVisible}"
                    layout="#{TagCloudBean.layout}"
                    order="#{TagCloudBean.order}"
                    styleClass="tagCloud"
                    rolloverClass="tagCloud_rollover"
                    itemClass="tagCloud_item"
                    itemRolloverClass="tagCloud_item_rollover"

                    itemWeightFormat="#{TagCloudBean.itemWeightFormat}"
                    itemWeightStyle="#{TagCloudBean.itemWeightStyle}"
                    maxItemStyle="#{TagCloudBean.maxItemStyle}"
                    minItemStyle="#{TagCloudBean.minItemStyle}"

                    actionListener="#{TagCloudBean.processAction}"/>

      </h:panelGrid>

      <h:panelGrid>
        <h:outputText id="headerResult"
                      styleClass="headerResult"
                      value="Category: <b>#{TagCloudBean.currentCategory}</b><br/>Tag: <b>#{TagCloudBean.var.text} </b> <hr/>"
                      escape="false"/>

        <h:outputText id="currentEntities"
                      styleClass="currentEntities"
                      value="#{TagCloudBean.currentEntities}"
                      escape="false"/>

      </h:panelGrid>
    </h:panelGrid>

    <h:outputText id="headerMain"
                  styleClass="headerMain"
                  value="Customize TagCloud:"/>
    <br/>
    <h:panelGrid id="skinGrid"
                 columns="2"
                 style="padding: 3px;">

      <h:outputLabel id="layoutSelection"
                     value="Layout:"/>
      <h:selectOneRadio id="layoutList"
                        value="#{TagCloudBean.layout}"
                        converter="#{TagCloudBean.layoutConverter}">
        <f:selectItems value="#{TagCloudBean.layoutList}"/>
        <o:ajax event="mouseup"
                render="listTagCloud orderList"/>
      </h:selectOneRadio>


      <h:outputLabel id="orderSelection"
                     value="Order:"/>

      <h:selectOneRadio id="orderList"
                        value="#{TagCloudBean.order}"
                        converter="#{TagCloudBean.orderConverter}">
        <f:selectItems value="#{TagCloudBean.orderList}"/>
        <o:ajax event="mouseup"
                render="listTagCloud"/>
      </h:selectOneRadio>


      <h:outputLabel id="weightVisibilitySelection"
                     value="Weight Visible:"/>
      <o:selectBooleanCheckbox value="#{TagCloudBean.itemWeightVisible}">
        <o:ajax event="mouseup"
                render="listTagCloud"/>
      </o:selectBooleanCheckbox>

    </h:panelGrid>
  </div>

  <div id="Description">
    <h4>Demonstrated Features</h4>
    <ul  class="hang">
      <li><strong>Layout</strong> - there are four layout types. Select it by radio button </li>
      <li><strong>Ordering</strong> - you can order tags in different ways. Select it by radio button</li>
      <li><strong>Styling</strong> - you can style tag cloud, tag cloud item, and weight of tag cloud item.
        Select skin from drop down</li>
      <li><strong>Specifying number conversion settings and pattern for weight</strong> -
        Select skin from drop down and select "Weight Visible" checkbox.</li>
      <li><strong>Support of Collections and Arrays</strong> - Tag Cloud could be generated from Collection or
        Array of any object type</li>
       <li><strong>Accessibility of tag cloud item object on server</strong> -
         When you select some tag cloud item then you can get object of this item from context
       using var parameter. This example use this feature to display resources.</li>
    </ul>
  </div>
</div>