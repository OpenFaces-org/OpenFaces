<div xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:o="http://openfaces.org/"
     xmlns:a4j="http://richfaces.org/a4j"
     xmlns:rich="http://richfaces.org/rich">
  <a href="inQKContainersIndex.jsf">Back to the main page</a>
  <br/>
  <h:commandButton value="Set Ajax loading mode" action="#{A4jParametersBean.defineAjaxMode}"/>
  <br/>
  <h:commandButton value="Set Server loading mode" action="#{A4jParametersBean.defineServerMode}"/>
  <br/>
  <h:commandButton value="Set Client loading mode" action="#{A4jParametersBean.defineClientMode}"/>
  <br/>
  <o:tabbedPane style="width: 400px; height: 400px; padding:2px"
                containerStyle="padding:2px"
                tabStyle="white-space: nowrap; padding:2px"
                loadingMode="#{A4jParametersBean.loadingMode}">
    <o:subPanel>
      <f:facet name="caption">
        <h:outputText value="First tab"/>
      </f:facet>
      <rich:panel>
        <f:facet name="header">
          <h:outputText value="Write your own custom rich components with built-in AJAX support"/>
        </f:facet>
        <h:outputText value="The CDK includes a code-generation facility and a"/>
        <h:outputText value="templating facility using a JSP-like syntax. These capabilities help"/>
        <h:outputText value="to avoid a routine process of a component creation. The component factory"/>
        <h:outputText value="works like a well-oiled machine allowing the creation of first-class"/>
        <h:outputText value="rich components with built-in Ajax functionality even more easily than"/>
        <h:outputText value="the creation of simpler components by means of the traditional coding"/>
        <h:outputText value="approach."/>
      </rich:panel>
    </o:subPanel>
    <o:subPanel>
      <f:facet name="caption">
        <h:outputText value="Second tab"/>
      </f:facet>
      <rich:panel>
        <f:facet name="header">
          <h:outputText value="Write your own custom rich components with built-in AJAX support"/>
        </f:facet>
        <h:outputText value="The CDK includes a code-generation facility and a"/>
        <h:outputText value="templating facility using a JSP-like syntax. These capabilities help"/>
        <h:outputText value="to avoid a routine process of a component creation. The component factory"/>
        <h:outputText value="works like a well-oiled machine allowing the creation of first-class"/>
        <h:outputText value="rich components with built-in Ajax functionality even more easily than"/>
        <h:outputText value="the creation of simpler components by means of the traditional coding"/>
        <h:outputText value="approach."/>
      </rich:panel>
    </o:subPanel>
    <o:subPanel>
      <f:facet name="caption">
        <h:outputText value="Third tab"/>
      </f:facet>
      <rich:panel>
        <f:facet name="header">
          <h:outputText value="Write your own custom rich components with built-in AJAX support"/>
        </f:facet>
        <h:outputText value="The CDK includes a code-generation facility and a"/>
        <h:outputText value="templating facility using a JSP-like syntax. These capabilities help"/>
        <h:outputText value="to avoid a routine process of a component creation. The component factory"/>
        <h:outputText value="works like a well-oiled machine allowing the creation of first-class"/>
        <h:outputText value="rich components with built-in Ajax functionality even more easily than"/>
        <h:outputText value="the creation of simpler components by means of the traditional coding"/>
        <h:outputText value="approach."/>
      </rich:panel>
    </o:subPanel>
  </o:tabbedPane>

  <o:foldingPanel expanded="false"
                  loadingMode="#{A4jParametersBean.loadingMode}">
    <f:facet name="caption">
      <h:outputText value="FoldingPanel Caption"/>
    </f:facet>
    <rich:panel>
        <f:facet name="header">
          <h:outputText value="Write your own custom rich components with built-in AJAX support"/>
        </f:facet>
        <h:outputText value="The CDK includes a code-generation facility and a"/>
        <h:outputText value="templating facility using a JSP-like syntax. These capabilities help"/>
        <h:outputText value="to avoid a routine process of a component creation. The component factory"/>
        <h:outputText value="works like a well-oiled machine allowing the creation of first-class"/>
        <h:outputText value="rich components with built-in Ajax functionality even more easily than"/>
        <h:outputText value="the creation of simpler components by means of the traditional coding"/>
        <h:outputText value="approach."/>
      </rich:panel>
  </o:foldingPanel>

  <h:commandButton type="button"
                   id="popupInvoker"
                   value="Show PopupLayer"
                   onclick="O$('form1:popupLayer1').show(); return false;"/>
  <br/>
  <o:popupLayer id="popupLayer1"
                draggable="true"
                style="padding:2px; background-color:#fafdff">
    <rich:panel>
        <f:facet name="header">
          <h:outputText value="Write your own custom rich components with built-in AJAX support"/>
        </f:facet>
        <h:outputText value="The CDK includes a code-generation facility and a"/>
        <h:outputText value="templating facility using a JSP-like syntax. These capabilities help"/>
        <h:outputText value="to avoid a routine process of a component creation. The component factory"/>
        <h:outputText value="works like a well-oiled machine allowing the creation of first-class"/>
        <h:outputText value="rich components with built-in Ajax functionality even more easily than"/>
        <h:outputText value="the creation of simpler components by means of the traditional coding"/>
        <h:outputText value="approach."/>
      </rich:panel>
    <h:commandButton value="Hide"
                     onclick="O$('form1:popupLayer1').hide(); return false;"/>
  </o:popupLayer>
</div>